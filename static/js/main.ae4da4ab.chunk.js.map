{"version":3,"sources":["components/Table/commons.js","components/Checkbox/Checkbox.js","components/Icon/Icon.js","components/Table/TableHead/TableHead.js","components/Table/More/More.js","components/Table/TableBody/TableBody.js","components/Table/TableFooter/TableFooter.js","components/Table/Table.js","components/Chip/Chip.js","components/TableDemo/TableDemo.js","App.js","reportWebVitals.js","index.js"],"names":["padding","size","backgroundClass","isSelected","borderBottomClass","isLast","getRowClass","titleCase","val","split","filter","out","map","title","charAt","toUpperCase","substr","toLowerCase","join","Checkbox","checked","disabled","error","name","onChange","useState","modChecked","setModChecked","useEffect","className","id","e","target","type","defaultProps","Icon","iconName","TableHead","sortHeaders","rows","rowsHash","onSortColumn","moreOptionsLength","headers","checkbox","checkboxVal","toggleAll","canSort","header","some","value","getIconName","find","sort","Boolean","onClick","order","sortedRows","row1","row2","text1","get","text","text2","sortColumn","More","currentOptionId","onSetCurrentOptionId","moreOptions","onMoreClick","setMoreOption","preventDefault","moreItems","more","action","icon","TableBody","convertRowToData","toggleRow","currentMoreOptionId","setCurrentMoreOptionId","arrayLength","index","switchAction","cell","img","alt","src","template","row","length","cellIndex","setCurrentOptionId","clickAction","moreClickAction","TableFooter","itemsPerPage","selectedItemsPerPage","displayedStartIndex","displayedEndIndex","totalPages","page","changePage","onSelectedItemChange","selectValue","setSelectedValue","cursor","condition","item","Table","caption","paginate","data","allSelectedRows","setRows","setRowsHash","selectedRows","setSelectedRows","setTotalPages","setHeaders","oldHeaders","sampleData","Object","keys","setSelectedItemsPerPage","setPage","paginatedData","setPaginatedData","setDisplayedStartIndex","useReducer","state","startIndex","endIndex","paginatedDataLength","newEndIndex","Error","dispatch","Math","ceil","newPaginatedData","slice","newTotalPages","updatePagination","newRows","newRowsHash","Map","pageDataIndex","currentRow","datum","rowHash","headerIndex","currentCell","push","set","i","newPage","add","key","removeFromSelectedRows","_val","Chip","TableDemo","setData","normalData","setNormalData","setSortHeaders","setMoreOptions","moreOptionsData","setMoreOptionsData","templateData","setTemplateData","borderBottom","email","joined","oldVal","includes","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae4da4ab.chunk.js","sourcesContent":["export const padding = (size) => {\n    return size === 'default' ? 'py-16 px-10' : 'py-6 px-10'\n}\n\nexport const backgroundClass = (isSelected) => {\n    return isSelected ? 'bg-green-50' : '';\n}\n\nexport const borderBottomClass = (isLast) => {\n    return isLast ? '' : 'border-t-0 border-l-0 border-r-0 border-b-1 border-neutral-400 border-solid'\n}\n\nexport const hover = () => {\n    return `hover:bg-neutral-800 hover:bg-opacity-5`\n}\n\nexport const getRowClass = (isLast, isSelected, size = 'default') => {\n    return `${padding(size)} ${backgroundClass(isSelected)} ${borderBottomClass(isLast)} ${hover()}`\n}\n\nexport const titleCase = (val) => {\n    return val.split(' ')\n        .filter(out => out)\n        .map(title => `${title.charAt(0).toUpperCase()}${title.substr(1).toLowerCase()}`).join(' ')\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Checkbox.css';\n\nconst Checkbox = ({ checked, disabled, error, name, onChange }) => {\n  const [modChecked, setModChecked] = useState(checked)\n  useEffect(() => {\n    setModChecked(checked)\n  }, [checked])\n\n  const getCheckboxClass = () => {\n    const baseClass = disabled ? 'base-checkbox-disabled' : error ? 'base-checkbox-error' : 'base-checkbox'\n    return `m-0 flex justify-center items-center cursor-pointer ${baseClass}`\n  }\n\n  const updateChanged = e => {\n    setModChecked(e.target.checked)\n    onChange(e.target.checked)\n  }\n  return (\n    <div className=\"flex flex-col\">\n      <label className=\"flex cursor-pointer\">\n        <input name={name} id=\"checkbox-input\"\n          className={getCheckboxClass()}\n          disabled={disabled}\n          onChange={updateChanged}\n          type=\"checkbox\"\n          checked={modChecked} />\n      </label>\n    </div>\n  )\n};\n\nCheckbox.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool\n  ]),\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func\n};\n\nCheckbox.defaultProps = {};\n\nexport default Checkbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Icon.css';\n\nconst Icon = ({ iconName, className }) => (\n  <span className={className}>\n    {iconName}\n  </span>\n);\n\nIcon.propTypes = {\n  iconName: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired\n};\n\nIcon.defaultProps = {};\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TableHead.css';\nimport { getRowClass, padding, borderBottomClass, titleCase } from '../commons';\nimport Checkbox from '../../Checkbox/Checkbox'\nimport Icon from '../../Icon/Icon';\n\nconst TableHead = ({ sortHeaders, rows, rowsHash, size, onSortColumn, moreOptionsLength, headers, checkbox, checkboxVal, toggleAll }) => {\n\n  const canSort = (header) => {\n    return sortHeaders.some(val => val.value === header);\n  }\n\n  const sortColumn = (header) => {\n    if (canSort(header)) {\n      const order = sortHeaders.find(val => val.value === header)?.sort;\n      if (order) {\n        const sortedRows = [...rows].sort((row1, row2) => {\n          const text1 = (rowsHash.get(row1.id)?.get(header)?.text ?? '').toLowerCase();\n          const text2 = (rowsHash.get(row2.id)?.get(header)?.text ?? '').toLowerCase();\n          if (order === 'asc') {\n            return text1 < text2 ? -1 : text2 > text1 ? 1 : 0\n          } else {\n            return text1 > text2 ? -1 : text2 < text1 ? 1 : 0\n          }\n        })\n        onSortColumn(sortedRows);\n      }\n    }\n  }\n\n  const getIconName = (header) => {\n    const sort = sortHeaders.find(val => val.value === header)?.sort;\n    return sort === 'asc' ? 'arrow_upward' : 'arrow_downward';\n  }\n\n  return (\n    <thead className={getRowClass(false, false, size)}>\n      <tr>\n        {checkbox &&\n          <th className={`${padding()} text-center ${borderBottomClass(false)}`}>\n            <Checkbox checked={checkboxVal} onChange={val => toggleAll(Boolean(val))} />\n          </th>}\n        {headers.map(header => (\n          <th key={header} className={`${borderBottomClass(false)} ${padding()} text-center`}>\n            <div onClick={() => sortColumn(header)} className={canSort(header) ? 'cursor-pointer' : ''}>\n              <span className=\"text-subtitle2 text-neutral-700\">{titleCase(header)}</span>\n              {canSort(header) && <Icon iconName={getIconName(header)} className=\"material-icons ml-8\" />}\n            </div>\n          </th>\n        ))}\n        {Boolean(moreOptionsLength) && <th className={borderBottomClass(false)}></th>}\n      </tr>\n\n    </thead>)\n};\n\nTableHead.propTypes = {\n  checkbox: PropTypes.bool,\n  headers: PropTypes.array,\n  moreOptionsLength: PropTypes.number,\n  sortHeaders: PropTypes.array,\n  rows: PropTypes.array,\n  onSortColumn: PropTypes.func,\n  rowsHash: PropTypes.object,\n  size: PropTypes.oneOf(['default', 'dense']),\n  checkboxVal: PropTypes.bool,\n  toggleAll: PropTypes.func\n};\n\nTableHead.defaultProps = {\n  sortHeaders: []\n};\n\nexport default TableHead;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './More.css';\nimport Icon from '../../Icon/Icon';\n\nconst More = ({ id, currentOptionId, onSetCurrentOptionId, moreOptions, onMoreClick }) => {\n\n  const setMoreOption = (e) => {\n    e.preventDefault();\n    onSetCurrentOptionId(id)\n  }\n\n  const moreItems = moreOptions?.map(more =>\n    <span\n      key={more.text}\n      onClick={() => onMoreClick(more.action)}\n      className=\"cursor-pointer hover:bg-neutral-600 hover:bg-opacity-5 flex items-center p-8\">\n      {more.icon && <Icon iconName={more.icon} className=\"material-icons\" />}\n      <span>{more.text}</span>\n    </span>\n  )\n\n  return (\n    <>\n      <span id={id}\n        aria-controls=\"menu\"\n        className=\"cursor-pointer relative\"\n        aria-haspopup=\"menu\" onClick={setMoreOption}>\n        <Icon iconName=\"more_vert\" className=\"material-icons\" />\n        {\n          currentOptionId === id &&\n          <div\n            id=\"menu\"\n            aria-hidden={currentOptionId !== id}\n            aria-expanded={currentOptionId === id}\n            aria-labelledby={id} className=\"flex z-10 flex-col bg-neutral-100 border-1x5 border-solid border-neutral-600 shadow-blur-8 absolute\">\n            {moreItems}\n          </div>\n        }\n      </span>\n      {\n        currentOptionId === id &&\n        <div className=\"fixed top-0 left-0 z-0 w-screen h-screen\" onClick={setMoreOption} id=\"menu-overlay\" />\n      }\n    </>\n\n  )\n\n};\n\nMore.propTypes = {\n  id: PropTypes.number,\n  currentOptionId: PropTypes.number,\n  onSetCurrentOptionId: PropTypes.func,\n  moreOptions: PropTypes.array,\n  onMoreClick: PropTypes.func\n};\n\nMore.defaultProps = {\n  moreOptions: []\n};\n\nexport default More;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './TableBody.css';\nimport { borderBottomClass, getRowClass, padding } from '../commons';\nimport Checkbox from '../../Checkbox/Checkbox';\nimport Icon from '../../Icon/Icon';\nimport More from '../More/More';\n\nconst TableBody = ({ rows, isSelected, checkbox, size, moreOptions, convertRowToData, toggleRow }) => {\n  const DEFAULT_OPTION_ID = -5;\n  const [currentMoreOptionId, setCurrentMoreOptionId] = useState(DEFAULT_OPTION_ID)\n\n  const isLast = (arrayLength, index) => {\n    return (arrayLength - 1) === index;\n  }\n\n  const setCurrentOptionId = (id) => {\n    const newId = id === currentMoreOptionId ? DEFAULT_OPTION_ID : id;\n    setCurrentMoreOptionId(newId)\n  }\n\n  const moreClickAction = (clickAction, row) => clickAction(convertRowToData(row))\n\n  const switchAction = cell => {\n    switch (cell.type) {\n      case 'text':\n        return <div>\n          {cell.img && <img className=\"mr-8\" alt={cell.text} src={cell.img} />}\n          {cell.icon && <Icon className=\"mr-8 material-icons\" iconName={cell.icon} />}\n          <span className=\"text-body1-regular text-neutral-700\">{cell.text}</span>\n        </div>\n      case 'template':\n        return <>{cell.template}</>\n      default:\n        return <></>\n    }\n  }\n\n  return (\n    <tbody>\n      {\n        rows.map((row, index) =>\n          <tr key={row.id} className={getRowClass(isLast(rows.length, index), isSelected(row))}>\n            {checkbox && <td className={`${borderBottomClass(isLast(rows.length, index))} ${padding(size)}`}>\n              <Checkbox checked={isSelected(row)} onChange={val => toggleRow(row, Boolean(val))} />\n            </td>}\n            {\n              row.value.map((cell, cellIndex) =>\n                <td key={cell?.text ?? cellIndex} className={`${borderBottomClass(isLast(rows.length, index))} ${padding(size)}`}>\n                  {switchAction(cell)}\n                </td>)\n            }\n            {\n              Boolean(moreOptions && (moreOptions?.length ?? 0)) &&\n              <td>\n                <More id={row.id}\n                  onSetCurrentOptionId={(id) => setCurrentOptionId(id)}\n                  currentOptionId={currentMoreOptionId}\n                  moreOptions={moreOptions}\n                  onMoreClick={(clickAction) => moreClickAction(clickAction, row)} />\n              </td>\n            }\n          </tr>)\n      }\n    </tbody>\n\n  )\n};\n\nTableBody.propTypes = {\n  rows: PropTypes.array,\n  isSelected: PropTypes.func,\n  checkbox: PropTypes.bool,\n  size: PropTypes.oneOf(['default', 'dense']),\n  template: PropTypes.element,\n  moreOptionsLength: PropTypes.number,\n  convertRowToData: PropTypes.func,\n  toggleRow: PropTypes.func\n};\n\nTableBody.defaultProps = {};\n\nexport default TableBody;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './TableFooter.css';\nimport { padding } from '../commons';\nimport Icon from '../../Icon/Icon';\n\nconst TableFooter = ({ size, itemsPerPage, selectedItemsPerPage, displayedStartIndex, displayedEndIndex, totalPages, page, changePage, onSelectedItemChange }) => {\n  const [selectValue, setSelectedValue] = useState(selectedItemsPerPage);\n\n  const cursor = (condition) => condition ? 'cursor-not-allowed' : 'cursor-pointer'\n\n  const onSelectChange = e => {\n    setSelectedValue(e.target.value);\n    onSelectedItemChange(e.target.value)\n  }\n\n  const pageLessClass = () => page === 1 ? 'md-inactive' : ''\n\n  const pageMoreClass = () => page === totalPages ? 'md-inactive' : ''\n\n  return (\n    <div className={`${padding(size)} flex items-center`}>\n      <span className=\"text-body1-regular text-neutral-600\">Rows per page:</span>\n      <select onChange={onSelectChange} value={selectValue} className=\"mr-16\">\n        {itemsPerPage.map(item =>\n          <option key={item}>{item}</option>)}\n      </select>\n      <span className=\"text-neutral-700 mr-14\">{`${displayedStartIndex}-${displayedEndIndex} of ${totalPages}`}</span>\n      <span onClick={() => changePage(page - 1)} className={`${cursor(page === 1)} mr-12`}>\n        <Icon iconName=\"chevron_left\" className={`material-icons ${pageLessClass()}`} />\n      </span>\n      <span onClick={() => changePage(page + 1)} className={`${cursor(page === totalPages)}`}>\n        <Icon iconName=\"chevron_right\" className={`material-icons ${pageMoreClass()}`} />\n      </span>\n    </div>\n  )\n};\n\nTableFooter.propTypes = {\n  size: PropTypes.oneOf(['default', 'dense']),\n  itemsPerPage: PropTypes.arrayOf(PropTypes.number),\n  selectedItemsPerPage: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  displayedStartIndex: PropTypes.number,\n  displayedEndIndex: PropTypes.number,\n  totalPages: PropTypes.number,\n  page: PropTypes.number,\n  changePage: PropTypes.func,\n  onSelectedItemChange: PropTypes.func\n};\n\nTableFooter.defaultProps = {};\n\nexport default TableFooter;\n","import React, { useEffect, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Table.css';\nimport TableHead from './TableHead/TableHead';\nimport TableBody from './TableBody/TableBody';\nimport TableFooter from './TableFooter/TableFooter';\n\n\nconst Table = ({ caption, sortHeaders, size, checkbox, moreOptions, paginate, data, allSelectedRows }) => {\n  const [rows, setRows] = useState([])\n  const [rowsHash, setRowsHash] = useState({})\n  const [selectedRows, setSelectedRows] = useState([])\n  const [totalPages, setTotalPages] = useState(1)\n\n  const [headers, setHeaders] = useState([])\n  useEffect(() => {\n    setHeaders(oldHeaders => {\n      if (!oldHeaders.length) {\n        const sampleData = data[0];\n        if (sampleData) return Object.keys(sampleData)\n      }\n      return oldHeaders\n    })\n  }, [data])\n\n  const displayedEndIndexReducer = (state, { type, startIndex, endIndex, page, totalPages, paginatedDataLength }) => {\n    switch (type) {\n      case 'endIndex':\n        const newEndIndex = page === totalPages ? (startIndex + (paginatedDataLength ?? 0)) : endIndex;\n        return {\n          ...state,\n          displayedEndIndex: newEndIndex\n        }\n      default:\n        throw new Error();\n    }\n  }\n\n  const [selectedItemsPerPage, setSelectedItemsPerPage] = useState(10)\n  const [page, setPage] = useState(1)\n  const [paginatedData, setPaginatedData] = useState([])\n  const [displayedStartIndex, setDisplayedStartIndex] = useState(0)\n  const [{ displayedEndIndex }, dispatch] = useReducer(displayedEndIndexReducer, { displayedEndIndex: 0 })\n  useEffect(() => {\n    const updateTotalPages = () => {\n      setTotalPages(Math.ceil(data.length / selectedItemsPerPage))\n    }\n\n    const updatePagination = () => {\n      if (paginate) {\n        const startIndex = selectedItemsPerPage * (page - 1);\n        const endIndex = selectedItemsPerPage * page;\n        const newPaginatedData = data.slice(startIndex, endIndex);\n        setPaginatedData(newPaginatedData)\n        setDisplayedStartIndex(startIndex + 1)\n        const newTotalPages = Math.ceil(data.length / selectedItemsPerPage);\n        dispatch({ type: 'endIndex', startIndex, endIndex, page, totalPages: newTotalPages, paginatedDataLength: newPaginatedData.length })\n      } else { setPaginatedData(data) }\n    }\n\n    updateTotalPages();\n    updatePagination();\n  }, [selectedItemsPerPage, data, page, paginate])\n\n\n  useEffect(() => {\n    setRows([]);\n    const newRows = [];\n    const newRowsHash = new Map();\n    for (let pageDataIndex = 0; pageDataIndex < paginatedData.length; pageDataIndex++) {\n      const currentRow = {\n        id: pageDataIndex,\n        value: []\n      }\n      const datum = paginatedData[pageDataIndex];\n      const rowHash = new Map();\n      for (let headerIndex = 0; headerIndex < headers.length; headerIndex++) {\n        const header = headers[headerIndex];\n        const currentCell = datum[header];\n        currentRow.value.push(currentCell);\n        rowHash.set(header, currentCell);\n      }\n      newRows.push(currentRow);\n      newRowsHash.set(pageDataIndex, rowHash);\n    }\n    setRows(newRows);\n    setRowsHash(newRowsHash);\n  }, [paginatedData, headers])\n\n  const itemsPerPage = [10, 20, 30, 40, 50];\n\n  const convertRowToData = (row) => {\n    const data = {};\n    for (let i = 0; i < headers.length; i++) {\n      const header = headers[i];\n      data[header] = row.value[i];\n    }\n    return data;\n  }\n\n  const isSelected = (row) => {\n    const data = convertRowToData(row);\n    const isSelectedVal = selectedRows.some(datum => {\n      const sameLength = Object.keys(datum).length === Object.keys(data).length;\n      if (sameLength) {\n        const keys = Object.keys(datum);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          if (key !== 'template' && datum[key] !== data[key]) return false\n        }\n        return true\n      }\n      return false;\n    })\n    return isSelectedVal;\n  }\n\n  const changePage = (newPage) => {\n    if (newPage < page && page > 1) setPage(newPage)\n    if (newPage > page && page < totalPages) setPage(newPage)\n  }\n\n  const onSortColumn = rows => {\n    setRows(rows);\n  }\n\n  const onSelectedItemChange = val => {\n    setPage(1);\n    setSelectedItemsPerPage(val)\n  }\n\n  const removeFromSelectedRows = (val, data) => {\n    const newRows = [...val].filter(item => {\n      const sameKeys = Object.keys(item).length === Object.keys(data).length;\n      if (sameKeys) {\n        const keys = Object.keys(item);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          if (key !== 'template' && item[key] !== data[key]) return true;\n        }\n      } else return true\n      return false\n    })\n    allSelectedRows(newRows);\n    return newRows;\n  }\n\n  const toggleRow = (row, add) => {\n    const data = convertRowToData(row);\n    setSelectedRows(val => {\n      if (add) {\n        allSelectedRows([...val, data])\n        return [...val, data]\n      }\n      return removeFromSelectedRows(val, data)\n    })\n  }\n\n  const toggleAll = (add) => {\n    setSelectedRows(_val => {\n      let newRows = [];\n      if (add) newRows = [...paginatedData];\n      allSelectedRows(newRows)\n      return newRows\n    })\n  }\n\n  return (<div className=\"flex flex-col w-full bg-neutral-100\">\n    <table>\n      {caption && <caption className=\"text-h4 text-neutral-800 text-left\">{caption}</caption>}\n      <TableHead sortHeaders={sortHeaders}\n        rows={rows}\n        rowsHash={rowsHash}\n        onSortColumn={rows => onSortColumn(rows)}\n        size={size}\n        headers={headers}\n        checkbox={checkbox}\n        checkboxVal={selectedRows.length === paginatedData.length}\n        toggleAll={val => toggleAll(val)}\n        moreOptionsLength={moreOptions?.length ?? 0} />\n      <TableBody\n        rows={rows}\n        isSelected={(row) => isSelected(row)}\n        checkbox={checkbox}\n        size={size}\n        toggleRow={(row, add) => toggleRow(row, add)}\n        convertRowToData={row => convertRowToData(row)}\n        moreOptions={moreOptions} />\n    </table>\n    {paginate && <TableFooter size={size}\n      itemsPerPage={itemsPerPage}\n      selectedItemsPerPage={selectedItemsPerPage}\n      displayedStartIndex={displayedStartIndex}\n      displayedEndIndex={displayedEndIndex}\n      totalPages={totalPages}\n      page={page}\n      changePage={page => changePage(page)}\n      onSelectedItemChange={val => onSelectedItemChange(val)} />}\n  </div>)\n};\n\nTable.propTypes = {\n  caption: PropTypes.string,\n  paginate: PropTypes.bool,\n  sortHeaders: PropTypes.arrayOf(PropTypes.object),\n  size: PropTypes.oneOf(['default', 'dense']),\n  checkbox: PropTypes.bool,\n  moreOptions: PropTypes.arrayOf(PropTypes.exact({\n    text: PropTypes.string,\n    icon: PropTypes.string,\n    action: PropTypes.func\n  })),\n  data: PropTypes.array.isRequired,\n  allSelectedRows: PropTypes.func\n};\n\nTable.defaultProps = {\n  size: 'default',\n  paginate: false,\n  checkbox: false\n};\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Chip.css';\nimport { titleCase } from '../Table/commons';\n\nconst Chip = ({ text, disabled = false }) => {\n  const bgColor = () => disabled ? 'bg-neutral-300' : 'bg-green';\n  const textColor = () => disabled ? 'text-neutral-500' : 'text-neutral-100'\n  return (<div className={`flex justify-center items-center rounded-36 p-8 border-none ${bgColor()}`}>\n    <span\n      className={`${textColor()} text-caption`}>{titleCase(text)}\n    </span>\n  </div>)\n};\n\nChip.propTypes = {\n  text: PropTypes.string,\n  disabled: PropTypes.bool\n};\n\nChip.defaultProps = {\n  disabled: false\n};\n\nexport default Chip;\n","import React, { useEffect, useState } from 'react';\nimport './TableDemo.css';\nimport Table from '../Table/Table';\nimport Chip from '../Chip/Chip';\n\nconst TableDemo = () => {\n  const [data, setData] = useState([]);\n  const [normalData, setNormalData] = useState([])\n  const [sortHeaders, setSortHeaders] = useState([]);\n  const [moreOptions, setMoreOptions] = useState([]);\n  const [moreOptionsData, setMoreOptionsData] = useState([]);\n  const [templateData, setTemplateData] = useState([]);\n\n  const borderBottom = () => {\n    return `tw-border-t-0 tw-border-l-0 tw-border-r-0 tw-border-b-2 tw-border-neutral-500 tw-border-solid tw-pb-12`\n  }\n\n  useEffect(() => {\n    setData([\n      {\n        name: 'Guy Hawkins',\n        email: 'curtis.weaver@example.com',\n        joined: '6/1/19'\n      },\n      {\n        name: 'Arlene McCoy',\n        email: 'kenz.lawson@example.com',\n        joined: '6/9/14'\n      },\n      {\n        name: 'Esther Howard',\n        email: 'bill.sanders@example.com',\n        joined: '12/4/17'\n      },\n      {\n        name: 'Jacob Jones',\n        email: 'deanna.curtis@example.com',\n        joined: '1/5/12'\n      },\n      {\n        name: 'Albert Flores',\n        email: 'jackson.graham@example.com',\n        joined: '9/4/12'\n      },\n      {\n        name: 'Eleanor Pena',\n        email: 'willie.jennings@example.com',\n        joined: '5/9/12'\n      },\n      {\n        name: 'Jenny Wilson',\n        email: 'michelle.rivera@example.com',\n        joined: '1/3/14'\n      },\n      {\n        name: 'Michael Jackson',\n        email: 'jamey.parker@example.com',\n        joined: '2/4/14'\n      },\n      {\n        name: 'Bobby Willson',\n        email: 'antholdt.bold@example.com',\n        joined: '3/5/14'\n      },\n      {\n        name: 'Jade Pilkerson',\n        email: 'candice.james@example.com',\n        joined: '4/6/14'\n      },\n      {\n        name: 'Queen Rose',\n        email: 'darlene.jeans@example.com',\n        joined: '5/8/14'\n      },\n    ])\n  }, [])\n  useEffect(() => {\n    setNormalData(data.map(val => ({\n      name: {\n        type: 'text',\n        text: val.name\n      },\n      email: {\n        type: 'text',\n        text: val.email\n      },\n      joined: {\n        type: 'text',\n        text: val.joined\n      }\n    })))\n  }, [data])\n  useEffect(() => {\n    setSortHeaders([\n      {\n        value: 'name',\n        sort: 'asc'\n      },\n      {\n        value: 'email',\n        sort: 'desc'\n      }\n    ])\n  }, [])\n  useEffect(() => {\n    setMoreOptionsData([...normalData])\n    setMoreOptions([\n      {\n        text: 'Delete',\n        icon: 'delete',\n        action: (row) => {\n          setMoreOptionsData(oldVal => {\n            return [...oldVal].filter(item => {\n              const sameKeys = Object.keys(item).length === Object.keys(row).length;\n              if (sameKeys) {\n                const keys = Object.keys(item)\n                for (let i = 0; i < keys.length; i++) {\n                  const key = keys[i];\n                  if (key !== 'template' && item[key] !== row[key]) return true;\n                }\n              } else return true\n              return false\n            })\n          })\n        }\n      }\n    ])\n  }, [normalData])\n  useEffect(() => {\n    setTemplateData(data.map(val => ({\n      name: {\n        type: 'text',\n        text: val.name\n      },\n      email: {\n        type: 'text',\n        text: val.email\n      },\n      joined: {\n        type: 'template',\n        template: val.joined.includes('4') ?\n          (<Chip text=\"subscribed\" />) :\n          (<Chip text=\"not subscribed\" disabled={true} />)\n      }\n    })))\n  }, [data])\n  const allSelectedRows = rows => console.log('*** selected rows ***', rows.length);\n  return (\n    <div className=\"flex flex-col\">\n      <div className={`my-20 ${borderBottom} w-full`}>\n        <Table data={normalData} caption=\"Normal table\" />\n      </div>\n      <div className={`my-20 ${borderBottom} w-full`}>\n        <Table data={normalData} size=\"dense\" caption=\"Dense Table\" />\n      </div>\n      <div className={`my-20 ${borderBottom} w-full`}>\n        <Table sortHeaders={sortHeaders} data={normalData} caption=\"Table with sort columns\" />\n      </div>\n      <div className={`my-20 ${borderBottom} w-full`}>\n        <Table data={normalData} checkbox={true} caption=\"Table with checkbox\" allSelectedRows={rows => allSelectedRows(rows)} />\n      </div>\n      <div className={`my-20 ${borderBottom} w-full`}>\n        <Table data={templateData} caption=\"Table with templates\" />\n      </div>\n      <div className={`my-20 ${borderBottom} w-full`}>\n        <Table data={moreOptionsData} moreOptions={moreOptions} caption=\"Table with more options\" />\n      </div>\n      <div className={`my-20 ${borderBottom} w-full`}>\n        <Table data={normalData} paginate={true} caption=\"Table with pagination\" />\n      </div>\n    </div>\n  )\n};\n\nTableDemo.propTypes = {};\n\nTableDemo.defaultProps = {};\n\nexport default TableDemo;\n","import './App.css';\nimport TableDemo from './components/TableDemo/TableDemo';\n\nfunction App() {\n  return (\n    <div className=\"text-center bg-neutral-100 h-screen flex flex-col p-20\">\n      <TableDemo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}